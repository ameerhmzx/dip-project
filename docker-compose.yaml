version: '3'
volumes:
  postgresql_data:

services:
  database:
    container_name: photos_database
    hostname: photos_database
    image: postgres:12-alpine
    environment:
      - "POSTGRES_USER=photos"
      - "POSTGRES_PASSWORD=photos"
      - "POSTGRES_DB=photos"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "54322:5432"

  cache:
    container_name: photos_cache
    hostname: photos_cache
    image: redis
    ports:
      - "63791:6379"

  server:
    container_name: photos_server
    hostname: photos_primary
    build:
      context: ./
      dockerfile: Dockerfile
    image: photos
    command: sh -c "
      python -m pip install -r requirements.txt &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    env_file: .env
    links:
      - database
    depends_on:
      - database
    ports:
      - "8000:8000"
    volumes:
      - .:/photos
      - ./media/:/photos/media/

#  worker_1:
#    build:
#      context: ./server/
#      dockerfile: Dockerfile
#    hostname: dip_worker
#    command: >
#      bash -xc "
#        cd ..
#        celery -A server.tasks worker --loglevel=info
#      "
#    env_file: .env
#    volumes:
#      - ./server:/dip/server
#    links:
#      - cache
#    depends_on:
#      - cache
#
#  monitor:
#    build:
#      context: ./server/
#      dockerfile: Dockerfile
#    hostname: dip_worker
#    command: >
#      bash -xc "
#        cd ..
#        flower -A server.tasks --port=5555
#      "
#    env_file: .env
#    volumes:
#      - ./server:/dip/server
#    ports:
#      - "5555:5555"
#    depends_on:
#      - cache
#
#  server:
#    container_name: dip_server
#    hostname: dip_server
#    build:
#      context: ./server/
#      dockerfile: Dockerfile
#    image: dip_server
#    command: >
#      bash -xc "
#        flask run --host=0.0.0.0
#      "
#    env_file: .env
#    links:
#      - db
#    ports:
#      - "5000:5000"
#    volumes:
#      - ./server:/dip/server
